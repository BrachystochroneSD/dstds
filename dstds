#!/bin/bash

STEAMCMD="/usr/bin/steamcmd"
BIN_DIR="${HOME}/dstds_serv"
CLUSTER_NAME="MyDediServer"
CLUSTER_DIR="${HOME}/$CLUSTER_NAME"
SCREEN_SESSION="DSTDSAUR"

fail () {
    echo Error: "$@" >&2

    exit 1
}

check_for_file () {
    if [ ! -e "$1" ]; then
        fail "Missing file: $1"
    fi
}

server_update () {
    check_for_file "$STEAMCMD"
    "$STEAMCMD" +force_install_dir "$BIN_DIR" +login anonymous +app_update 343050 validate +quit
}

server_start () {
    [ ! -e "$CLUSTER_DIR" ] && fail "You need to install the server, check README"
    check_for_file "$CLUSTER_DIR/cluster.ini"
    check_for_file "$CLUSTER_DIR/cluster_token.txt"
    check_for_file "$CLUSTER_DIR/Master/server.ini"
    check_for_file "$CLUSTER_DIR/Caves/server.ini"
    check_for_file "$BIN_DIR/bin"
    run_shared=(./dontstarve_dedicated_server_nullrenderer)
    run_shared+=(-console)
    run_shared+=(-cluster "$CLUSTER_NAME")
    run_shared+=(-monitor_parent_process '$$')
    server_command="${run_shared[@]} -shard Caves | sed 's/^/Caves:  /' & ${run_shared[@]} -shard Master | sed 's/^/Master: /'"
    if [ "$1" = "--raw" ] ;then
        server_update
        cd "$BIN_DIR"/bin || fail "No binaries found, launch \"dstds update\""
        /usr/bin/bash -c "$server_command"
    else
        [ "$1" = "--update" ] && server_update
        if screen -S "$SCREEN_SESSION" -Q select . > /dev/null ; then
            echo "Server already running in screen session $SCREEN_SESSION"
        else
            cd "$BIN_DIR"/bin || fail
            screen -dmS "$SCREEN_SESSION" /usr/bin/bash -c "$server_command"
        fi
    fi
}

server_console () {
    if screen -S "$SCREEN_SESSION" -Q select . > /dev/null ; then
        screen -r "$SCREEN_SESSION"
    else
        echo "Server is not running or not in a screen session"
    fi
}

server_stop () {
    if screen -S "$SCREEN_SESSION" -Q select . > /dev/null ; then
        screen -S "$SCREEN_SESSION" -X stuff "^C"
    else
        echo "Server is not running or not in a screen session"
    fi
}

help () {
    cat <<EOF
    Options:
        start (--update)
        stop
        update
        console
EOF
}

case "$1" in
    start)
        server_start "$2" ;;
    stop)
        server_stop ;;
    update)
        server_update ;;
    console)
        server_console ;;
    raw-launch)
        server_start --raw ;;
    *)
        help ; exit 1 ;;
 esac
